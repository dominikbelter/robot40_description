<?xml version="1.0"?>
<robot name="robot40" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="headRadius" value="0.075" />
  <xacro:property name="bodyLen" value="1.0" />
  <xacro:property name="bodyRadius" value="0.075" />
  <xacro:property name="shoulderLen" value="0.3" />
  <xacro:property name="shoulderRadius" value="0.05" />
  <xacro:property name="sideShoulderLen" value="0.15" />
  <xacro:property name="sideShoulderRadius" value="0.05" />
  <xacro:property name="baseWidth" value="0.65" />
  <xacro:property name="baseLength" value="0.25" />
  <xacro:property name="baseHeight" value="0.15" />
  <xacro:property name="base_mass" value="12" />

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>

    
    <link name="head">
      <visual>
	<origin xyz="0.0 0 0.67" rpy="0 0 -1.5708" />
	<geometry>
          <mesh filename="package://robot40_description/meshes/headBase.dae" />
	</geometry>
      </visual>
      <collision>
          <origin xyz="0.0 0 0.67" rpy="0 0 -1.5708" />
	<geometry>
          <mesh filename="package://robot40_description/meshes/headBase.dae" />
	</geometry>
      </collision>
<!--      <xacro:cylinder_inertial radius="0.003" length="0.005" mass="1.0">-->
<!--        <origin xyz="0.0 0 0.67" rpy="0 0 -1.5708" />-->
<!--      </xacro:cylinder_inertial>-->
    </link>

  <link name="utm30">
    <visual>
	<origin xyz="-0.00 0.0 -0.0" rpy="1.5708 0.0 -0.0" />
	<geometry>
          <mesh filename="package://robot40_description/meshes/headUTM.dae" />
	</geometry>
      </visual>
      <collision>
          <origin xyz="-0.00 0.0 -0.0" rpy="1.5708 0.0 -0.0" />
	<geometry>
          <mesh filename="package://robot40_description/meshes/headUTM.dae" />
	</geometry>
      </collision>
<!--      <xacro:cylinder_inertial radius="0.003" length="0.005" mass="0.2">-->
<!--        <origin xyz="-0.00 0.0 -0.0" rpy="1.5708 0.0 -0.0" />-->
<!--      </xacro:cylinder_inertial>-->
  </link>

   <link name="realsense_wrist">
    <visual>
	<origin xyz="0.0 0.0 -0.0" rpy="0 0.0 0.0" />
	<geometry>
          <mesh filename="package://robot40_description/meshes/camera_intel.stl" scale="0.001 0.001 0.001" />
	</geometry>
      </visual>
      <collision>
          <origin xyz="0.0 0.08 -0.0" rpy="0 0.0 0.0" />
	<geometry>
          <mesh filename="package://robot40_description/meshes/camera_intel.stl" scale="0.001 0.001 0.001"/>
	</geometry>
      </collision>
<!--      <xacro:cylinder_inertial radius="0.003" length="0.005" mass="0.2">-->
<!--        <origin xyz="0.0 0.08 -0.075" rpy="0 0.0 0.0" />-->
<!--      </xacro:cylinder_inertial>-->
  </link>

  <joint name="realsense_wrist_joint" type="fixed">
    <parent link="obejma1" />
    <child link = "realsense_wrist" />
    <origin xyz="0.0 0.08 -0.075" rpy="0 0 1.57"   />
  </joint>
  
  
   <!-- rg2 joint -->
   
  <!-- <origin xyz="0.0 0.08 -0.075" rpy="0.0 0.0 1.57"   />   -->

  <link name="obejma1">
    <visual>
	<origin xyz="0.0 0.05 0.0" rpy="0.0 0.0 -0.0" />
	<geometry>
          <mesh filename="package://robot40_description/meshes/obejma_v2.stl" scale="0.01 0.01 0.01" />
	</geometry>
      </visual>
      <collision>
          <origin xyz="0.0 0.05 0.0" rpy="0.0 0.0 -0.0"  />
	<geometry>
          <mesh filename="package://robot40_description/meshes/obejma_v2.stl" scale="0.01 0.01 0.01"/>
	</geometry>
      </collision>
<!--      <xacro:cylinder_inertial radius="0.003" length="0.005" mass="0.2">-->
<!--        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />-->
<!--      </xacro:cylinder_inertial>-->
  </link>

  
  <link name="obejma2">
    <visual>
        <origin xyz="0.0 0.05 0.0" rpy="0.0 0.0 -0.0" /><!--xyz="-0.01 0.21 0.62" rpy="-2.3562 0.0 0.0"-->
	<geometry>
          <mesh filename="package://robot40_description/meshes/obejma_v1.stl" scale="0.01 0.01 0.01" />
	</geometry>
      </visual>
      <collision>
          <origin xyz="0.0 0.05 0.0" rpy="0.0 0.0 -0.0"  />
	<geometry>
          <mesh filename="package://robot40_description/meshes/obejma_v1.stl" scale="0.01 0.01 0.01"/>
	</geometry>
      </collision>
<!--      <xacro:cylinder_inertial radius="0.003" length="0.005" mass="0.2">-->
<!--        <origin xyz="0.0 0.05 0.0" rpy="0.0 0.0 -0.0" />-->
<!--      </xacro:cylinder_inertial>-->
  </link>
  
    
  <link name="mocowanie">
    <visual>
        <origin xyz="-0.0513 0.05 0.035" rpy="0.0 3.14 -0.0" /><!--xyz="-0.01 0.21 0.62" rpy="-2.3562 0.0 0.0"-->
	<geometry>
          <mesh filename="package://robot40_description/meshes/mocowanie_laser.stl" scale="0.01 0.01 0.01" />
	</geometry>
      </visual>
      <collision>
          <origin xyz="-0.0513 0.05 0.035" rpy="0.0 3.14 -0.0"  />
	<geometry>
          <mesh filename="package://robot40_description/meshes/mocowanie_laser.stl" scale="0.01 0.01 0.01"/>
	</geometry>
      </collision>
<!--      <xacro:cylinder_inertial radius="0.003" length="0.005" mass="0.2">-->
<!--        <origin xyz="-0.0513 0.05 0.035" rpy="0.0 3.14 -0.0" />-->
<!--      </xacro:cylinder_inertial>-->
  </link>
  
  
  
  
  
  <joint name="head_swivel" type="continuous">
    <parent link="head"/>
    <child link="utm30"/>
    <axis xyz="0 0 1"/>
    <origin xyz="0.0 0.001 0.825" rpy="0 0 -0.0"/>
    <limit effort="30" velocity="1.0"/>
    <dynamics damping="0.0" friction="0.0"/>
  </joint>

  <transmission name="head_swivel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="$head_swivel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="head_swivel">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

  <gazebo reference="head">
    <sensor type="depth" name="head_kinect_depth_sensor">
        <always_on>true</always_on>
	<pose>0 0 0.67 0 0 0</pose>
        <horizontal_fov> ${91.2*3.14/180} </horizontal_fov>
        <vertical_fov> ${65.5*3.14/180} </vertical_fov>
        <diagonal_fov> ${100.6*3.14/180} </diagonal_fov>
        <update_rate>30.0</update_rate>
        <camera>
            
          <image>
            <format>R8G8B8</format>
            <width>1920</width>
            <height>1080</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>4.0</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.005</stddev>
          </noise>
        </camera>
        <plugin name="head_kinect_frame_controller" filename="libgazebo_ros_openni_kinect.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>6.0</updateRate>
          <cameraName>head_kinect</cameraName>
          <imageTopicName>color/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
          <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
          <frameName>head_kinect_color_optical_frame</frameName>
          <pointCloudCutoff>0.05</pointCloudCutoff>
          <rangeMax>4.0</rangeMax>
        </plugin>
      </sensor>
  </gazebo>
  <!-- -->
  <gazebo reference="realsense_wrist">
    <sensor type="depth" name="realsense_depth_sensor">
        <always_on>true</always_on>
        <horizontal_fov> ${91.2*3.14/180} </horizontal_fov>
        <vertical_fov> ${65.5*3.14/180} </vertical_fov>
        <diagonal_fov> ${100.6*3.14/180} </diagonal_fov>
        <update_rate>6.0</update_rate>
        <camera>
            
          <image>
            <format>R8G8B8</format>
            <width>1920</width>
            <height>1080</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>4.0</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.005</stddev>
          </noise>
        </camera>
        <plugin name="realsense_wrist_frame_controller" filename="libgazebo_ros_openni_kinect.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>6.0</updateRate>
          <cameraName>realsense_wrist</cameraName>
          <imageTopicName>color/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_rect_raw</depthImageTopicName>
          <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>depth_registered/points</pointCloudTopicName>
          <frameName>realsense_wrist_color_optical_frame</frameName>
          <pointCloudCutoff>0.05</pointCloudCutoff>
          <rangeMax>4.0</rangeMax>
        </plugin>
      </sensor>
  </gazebo>


    <gazebo reference="utm30">
        <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0.05 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
            <scan>
            <horizontal>
                <samples>720</samples>
                <resolution>1</resolution>
                <min_angle>-1.570796</min_angle>
                <max_angle>1.570796</max_angle>
            </horizontal>
            </scan>
            <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
            </range>
            <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
            <topicName>/head/utm30/laser/scan</topicName>
            <frameName>utm30</frameName>
        </plugin>
        </sensor>
    </gazebo>
  
  
  <!-- ur3 -->
  <xacro:include filename="$(find ur_description)/urdf/ur3.urdf.xacro" />

  <!-- left arm -->
  <xacro:ur3_robot prefix="left_arm_" joint_limited="true"/>

  
 <xacro:include filename="$(find robot_descriptions)/description/rg2.urdf.xacro" />
 <xacro:rg2 prefix="left_arm_" />

  <joint name="left_arm_shoulder" type="fixed">
    <parent link="head" />
    <child link = "left_arm_base_link" />
    <origin xyz="-0.01 0.21 0.62" rpy="-2.3562 0.0 0.0" />
  </joint>
    
   <joint name="left_arm_rg2_joint" type="fixed">
    <parent link="left_arm_wrist_3_link" />
    <child link = "left_arm_rg2_body_link" />
    <origin xyz="-0.0 0.08 0.0" rpy="-1.57 0.0 1.57" />
  </joint>
  
  <joint name="obejma2_joint" type="fixed">
    <parent link="left_arm_wrist_3_link" />
    <child link = "obejma2" />
    <origin xyz="-0.0 0.0 0.0" rpy="0.0 0.0 0.0"  />
  </joint>

    <joint name="obejma1_joint" type="fixed">
    <parent link="left_arm_wrist_3_link" />
    <child link = "obejma1" />
    <origin xyz="-0.0 0.0 0.0" rpy="-0.0 0.0 0.0"  />
    
  </joint>
  <!-- dzyndzelek -->
    <joint name="mocowanie_joint" type="fixed">
    <parent link="obejma2" />
    <child link = "mocowanie" />
    <origin xyz="-0.0 0.0 0.0" rpy="-0.0 0.0 0.0"  />
    
  </joint>


  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
     
  </gazebo>

</robot>
